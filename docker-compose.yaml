version: "3.9"

services:

  worker:
    image: timurious/estimator:latest
    depends_on:
      - redis
    networks:
      - default
    entrypoint: ["rq", "worker", "--url", "redis://redis:6379", "--disable-default-exception-handler"]
    deploy:
      resources:
        limits:
          cpus: '1'
      replicas: 6
      update_config:
        parallelism: 2
        delay: 10s
      #restart_policy:
      #  condition: on-failure


  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always
    deploy:
      replicas: 1
      placement:
        constraints: [ node.role == manager ]
      #restart_policy:
      #  condition: on-failure
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - default

  dispatcher:
    image: timurious/estimator:latest
    depends_on:
      - redis
    entrypoint: [ "python3", "-m", "Estimator.dispatcher", "-tl", "100"]
    deploy:
      replicas: 1
      placement:
        constraints: [ node.role == manager ]
      restart_policy:
        condition: on-failure
    volumes:
      - type: bind
        source: /Users/timur/Downloads/tmp2 # write your path
        target: /data
    networks:
      - default

  listener:
    image: timurious/estimator:latest
    depends_on:
      - redis
    entrypoint: [ "python3", "-m", "Estimator.listener" ]
    deploy:
      replicas: 1
      placement:
        constraints: [ node.role == manager ]
      #restart_policy:
      #  condition: on-failure
    volumes:
      - type: bind
        source: /Users/timur/Downloads/tmp2 # write your path
        target: /data
    networks:
      - default

networks:
  default:
    name: redis_network